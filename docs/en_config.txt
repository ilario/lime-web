---
---
The Configuration file
======================

== The Configuration file

The configuration file placed on **/etc/config/lime** is one of the key points for LibreMesh.
It contains a set of basic options which are used by LibreMesh backend to perform its magic.
The special program **lime-config** reads such file and applies the configuration to the operating system.
The default options (those which are not defined by the user in the config file) are read from **/etc/config/lime-defaults**, 
which should not be modified.


Some options are parametrizable with a set of special characters which will be substituted for some specific node data.

. **MAC bytes** [%Mn] refers to the MAC address of the primary interface. Example from CA:FF:EE:BA:BB:EE %M1=CA and %M4=BA
. **Network Identifier** [%Nn] refers to the cloud identifier byte which is a hash of the AP SSID.
. **Hostname** [%H] Refers to the hostname of the node

[NOTE]
==============
Note that there is no need to manual configure any of the config file options unless you know what are you doing. 
In most of the scenarios the default options defined in lime-defaults should work fine.
==============

=== List of sections and options

For detailed information on each of the options, check the https://github.com/libremesh/lime-packages/blob/master/packages/lime-docs/files/lime-example[/docs/lime-example] file.

.System options
----
config lime system
	option hostname 'LiMe-%M4%M5%M6'
	option domain 'lan'
	option keep_on_upgrade 'libremesh base-files-essential /etc/sysupgrade.conf'
----

We suggest to change the domain from +lan+ to your community's website, for example +option domain 'altermundi.net'+.

.Network general options
----
config lime network
	option primary_interface 'eth0'
	option main_ipv4_address '10.%N1.0.0/16'
	option anygw_dhcp_start '2'
	option anygw_dhcp_limit '0'
	option main_ipv6_address '2a00:1508:0a%N1:%N200::/64'
	list protocols ieee80211s
	list protocols lan
	list protocols anygw
	list protocols batadv:%N1
	list protocols bmx6:13
	list protocols olsr:14
	list protocols olsr6:15
	list protocols olsr2:16
	list protocols babeld:17
	list protocols bmx7:18
	list resolvers 4.2.2.2   # b.resolvers.Level3.net
	list resolvers 141.1.1.1 # cns1.cw.net
	list resolvers 2001:470:20::2 # ordns.he.net
	option bmx6_mtu '1500'
	option bmx6_publish_ownip false
	option bmx6_over_batman false
	option bmx6_pref_gw none
	option bmx6_wifi_rate_max 54000000
	option bmx7_mtu '1500'
	option bmx7_publish_ownip false
	option bmx7_over_batman false
	option bmx7_pref_gw none
	option bmx7_wifi_rate_max 'auto'
	option anygw_mac "aa:aa:aa:%N1:%N2:aa"
	option use_odhcpd false
----

[NOTE]
.main_ipv4_address
================
Here you have 4 possibilities: 

. set a static IP and the subnet, like '192.0.2.1/16' 

. parametrize with %Mn and %Nn, and set the subnet, like '192.%N1.%M5.%M6/16'; 

. set a whole network address (so not a specific IP) for getting the IP autocompleted in that network with bits from MAC address, this works also with netmasks other than /24 or /16, like '192.0.128.0/17' 

. set two different parameters, the first for subnet and the second for the node IP parametrization, like '192.0.128.0/16/17', this results in /16 subnet but the node IP will be calculated in a /17 range.

================

[NOTE]
.main_ipv6_address
================
Parametrizable in the same way as main_ipv4_address. If used, the IP autocompletion will fill maximum the last 24 bits, 
so specifying an IP autocompletion range bigger than /104 is not useful.
================

[NOTE]
.list protocols
================
List of protocols configured by LibreMesh, some of these require the relative package "lime-proto-...". 
Note that if you set here some protocols, you overwrite the **whole** list of protocols set in /etc/config/lime-defaults.
Don't worry if all protocols are defined here: just the actually installed ones will be active.
================


.WiFi general options
----
config lime wifi
	option channel_2ghz '11'
	list channel_5ghz '157'
	list channel_5ghz '48'
	option htmode_5ghz 'HT40'
	option distance_2ghz '100'
	option distance_5ghz '1000'
	list modes 'ap'
	list modes 'apname'
	list modes 'ieee80211s'
	option ap_ssid 'LibreMesh.org'
	option apname_ssid 'LibreMesh.org/%H'
	option adhoc_ssid 'LiMe'
	option adhoc_bssid 'ca:fe:00:c0:ff:ee'
	option adhoc_mcast_rate_2ghz '24000'
	option adhoc_mcast_rate_5ghz '6000'
	option ieee80211s_mesh_fwding '0'
	option ieee80211s_mesh_id 'LiMe'
----

[NOTE]
.country code
=============
The country code is not specified by default (so that the default is US), but we strongly recommend to specify it, for example in Spain setting +option country 'ES'+ you can access the channel 13 which otherwise is restricted.
=============

[NOTE]
.distance
=============
Distance parameter indicates the maximum distance of the wireless connected devices.
A much too large value would decrease the performances but even a slightly too small value can result in a non-working connection.
=============

[NOTE]
.wifi options
=============
Any option with name <mode>_<option> will be directly copied to /etc/config/wireless (without the <mode>_ prefix)
=============

[NOTE]
.wifi WPA2 encryption
=============
In order to have WPA2-PSK encryptionon the AP and APname interfaces, add a +_key 'somePassword'+ and a +_encryption 'psk2'+ options for each, for having an example see https://github.com/libremesh/lime-packages/blob/master/packages/lime-docs/files/lime-example[/docs/lime-example].
=============

[NOTE]
.wifi 80211s
=============
Mode ieee80211s refers to https://en.wikipedia.org/wiki/IEEE_802.11s[802.11s] standard (known as mesh). When +option ieee80211s_mesh_fwding '0'+ is present, the routing layer is disabled and it can be used only as a link-layer protocol such as adhoc.
Be aware that it cannot be used together with adhoc on the same interface.
=============

.WiFi interface specific options (override general option), multiple allowed.
----
config wifi radio0
	list modes 'client'
	option channel 'auto'
	option client_ssid 'SomeWiFiNetwork'
	option client_key 'SomeWPApskPassword'
	option client_encryption 'psk2'

config net wirelessclientWAN
	option linux_name 'wlan0-sta'
	list protocols 'wan'
----

The first section configures one wireless radio to be only a wireless client of an access point.
The second section configures the just created client interface for obtaining an IP from the access point DHCP.

[NOTE]
.interface names
=======================
In the just reported example, +radio0+ has to exist (check with +wifi status+) and also +wlan0-sta+ has to be created by the first section in order to be used in the second section (check with +ip link show+). 
=======================

[NOTE]
.Network interface specific options
=======================
Available protocols: bmx6, bmx7, batadv, olsr, olsr6, olsr2, bgp, wan, lan, manual, static, babeld, apbb, client

proto:vlan_number works too (something like bmx6:13 is supported). If VLAN is 0, no VLAN will be used.

If you use manual do not specify other protocols, may result in an unpredictable behavior/configuration.
=======================

.Ethernet specific options, multple allowed
----
config net port5
	option linux_name 'eth1.5'
	list protocols 'wan'
	list protocols 'static'
	option static_ipv4 '192.168.1.2/24'
	option static_gateway_ipv4 '192.168.1.1'
	option static_ipv6 '2a00:1508:0a00::1234/64'
	option static_gateway_ipv6 'fe80::1'
----

[NOTE]
.config net
================
Do not put any "." in the section name.

As linux_name, use the actual name of the interface as the system shows (execute +ip link show+ to see).

Some of these protocols require the relative package "lime-proto-...".
================

.Ground routing specific sections
----
config hwd_gr link1
	option net_dev 'eth0'
	option vlan '5'
	option switch_dev 'switch0'
	option switch_cpu_port '0'
	list switch_ports '4'
----

[NOTE]
.config hwd_gr
===============
* net_dev: Plain ethernet device on top of which 802.1q vlan will be constructed.

* vlan: Vlan id to use for this ground routing link, use little one because cheap switch doesn't supports big ids, this will be used also as 802.1q vid.

* switch_dev: These options regarding switch need to be set only if your ethernet device is connected to a switch chip. If the switch exists you can read its name (like switch0) in +/etc/config/network+ file.

* switch_cpu_port: Refer to switch port map of your device on https://openwrt.org/toh/start[OpenWrt ToH] to know CPU port index.

* switch_ports: List switch ports on which you want the vlan being passed, refer to https://openwrt.org/toh/start[OpenWrt ToH] for correspondence with physical ports.
===============

[NOTE]
==============
One section for each ground routing link.
With ground routing we mean setups having LibreMesh on a router which is connected via cable(s), eventually through a switch, to some wireless routers running the original firmware in WDS (transparent bridge) Ap/Sta mode.
Likely you want to configure as many sections of ground routing with different vlan numbers or different switch ports as many connected devices in WDS mode.
==============

.Proto BGP specific sections (one section for each BGP peer)
----
config bgp_peer peer1
	option remoteIP '192.0.2.6'
	option remoteAS '65550'

config bgp_peer peer2
	option remoteIP '2001:db8::c001'
	option remoteAS '65549'
----

For documentation on BGP configuration see link:http://nicolasacco.diveni.re/~gio/internship-report/main.html#proto:bgp[this thesis].

